services:
  api:
    build:
      context: .
      dockerfile: Paperless.DAL.Service/Dockerfile  
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://0.0.0.0:8080"
      ConnectionStrings__Default: "Host=postgres;Port=5432;Database=paperless;Username=postgres;Password=postgres"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy


  webui:
    build:
       context: ./Paperless.WebUI   
    ports:
       - "80:80"                   
    depends_on:
       - api

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d paperless"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.1-management
    container_name: rabbit-mq
    ports:
        - "5672:5672"
        - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

volumes:
  dbdata:
  rabbitmq_data:
